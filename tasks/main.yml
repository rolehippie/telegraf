---
- name: Remove legacy key
  ansible.builtin.apt_key:
    id: 05CE15085FC09D18E99EFB22684A14CF2582E0C5
    state: absent
  tags:
    - telegraf

- name: Remove legacy repo
  ansible.builtin.apt_repository:
    repo: "deb https://repos.influxdata.com/{{ telegraf_repo_distribution | default(ansible_distribution) | lower }} {{ telegraf_repo_release | default(ansible_distribution_release) }} stable"
    filename: telegraf
    update_cache: False
    state: absent
  tags:
    - telegraf

- name: Download repo key
  ansible.builtin.shell:
    cmd: "curl -sSL 'https://repos.influxdata.com/influxdata-archive_compat.key' | gpg --dearmor --output {{ telegraf_keyring }}"
    creates: "{{ telegraf_keyring }}"
  tags:
    - telegraf

- name: Add apt repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by={{ telegraf_keyring }}] https://repos.influxdata.com/{{ telegraf_repo_distribution | default(ansible_distribution) | lower }} {{ telegraf_repo_release | default(ansible_distribution_release) }} stable"
    filename: telegraf
    update_cache: True
    state: present
  tags:
    - telegraf

- name: Install required packages
  loop:
    - telegraf
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - telegraf

- name: Combine default lists
  ansible.builtin.set_fact:
    telegraf_processors: "{{ telegraf_processors_default + telegraf_processors_extra }}"
    telegraf_aggregators: "{{ telegraf_aggregators_default + telegraf_aggregators_extra }}"
    telegraf_plugins: "{{ telegraf_plugins_default + telegraf_plugins_extra }}"
  tags:
    - telegraf

- name: Find template files
  when: telegraf_templates | default(False)
  register: telegraf_templates_find
  delegate_to: localhost
  ansible.builtin.find:
    paths: "{{ telegraf_templates }}"
    file_type: file
  tags:
    - telegraf

- name: Write template files
  loop: "{{ telegraf_templates_find.files }}"
  loop_control:
    label: "/etc/telegraf/telegraf.d/{{ item.path | basename }}"
  when: telegraf_templates | default(False)
  notify:
    - Restart telegraf
  ansible.builtin.template:
    src: "{{ item.path }}"
    dest: /etc/telegraf/telegraf.d/{{ item.path | basename }}
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - telegraf

- name: Add docker group
  notify:
    - Restart telegraf
  when: requires_docker_group
  ansible.builtin.user:
    name: telegraf
    groups: docker
    append: True
  tags:
    - telegraf

- name: Add sudo group
  notify:
    - Restart telegraf
  when: requires_sudo_group
  ansible.builtin.user:
    name: telegraf
    groups: sudo
    append: True
  tags:
    - telegraf

- name: Write config file
  notify:
    - Restart telegraf
  ansible.builtin.template:
    src: config.j2
    dest: /etc/telegraf/telegraf.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - telegraf

- name: Start telegraf service
  ansible.builtin.systemd:
    name: telegraf
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - telegraf

...
